name: Build AAR

env:
  # The name of the main module repository
  main_project_module: app

on:
  push:
    branches:
      - main # Or your main development branch
  pull_request:
    branches:
      - main # Or your main development branch

jobs:
  build:
    runs-on: ubuntu-latest # Or a suitable runner environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: set repository name as env variable
        run: echo "repository_name=$(echo '{{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # Or the JDK version required by your project

      - name: Change wrapper permission
        run: chmod +x ./gradlew

      - name: Run gradle tests
        run: ./gradlew test

      - name: Build gradle project
        run:  ./gradlew build

      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run:  ./gradlew ${{ env.main_project_module }}:bundleRelease

      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }} - APK(s) debug
          path: ${{ env.main_project_module }}/build/outputs/apk/release

      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }} - APK(s) debug
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      - name: Upload AAB - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }} - App bundle AAB release
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/
  
  convert-apk-to-aar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.repository_name }} - APK release generated
          path: apk-release
      
      - name: Convert APK to AAR
        run: |
          mkdir -p output-aar
          apk-to-aar-converter apk-release/${{ env.main_project_module }}.apk output-aar/${{ env.main_project_module }}.aar
      - name: Upload AAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }} - AAR generated
          path: output-aar/
      
    
      - name: Build AAR
        run: ./gradlew ${{ env.main_project_module }}:assembleRelease # Or the specific Gradle task to build your AAR
  #Upload AAR Release

      - name: Upload AAR Release - ${{ env.main_project_module }}
        uses: actions/upload-artifact@v4

        with:
          name: Android Archive(s) AAR release generated
          path: ${{ env.main_project_module }}/build/outputs/aar/
